{"ast":null,"code":"var _jsxFileName = \"/Users/kieferslaton/workout/client/src/components/Register.js\";\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\n\nconst Register = ({\n  handleSuccessfulLogin\n}) => {\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const [password2, setPassword2] = useState();\n  const [usernameError, setUsernameError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const users = axios.get('/users').then(res => console.log(res.data)).catch(err => console.log(err));\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.post('/users/login', {\n      username: username,\n      password: password\n    }).then(res => {\n      console.log(res.data);\n      handleSuccessfulLogin(res.data);\n    }).catch(err => console.log(err.status));\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formUsername\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: username,\n    onChange: e => {\n      setUsername(e.target.value);\n      console.log(users);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Form.Text, {\n    className: `${usernameError ? '' : 'd-none'} text-muted`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"Username already taken.\")), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formPassword2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"Re-Enter Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    value: password2,\n    onChange: e => setPassword2(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Register\"));\n};\n\nexport default Register;","map":{"version":3,"sources":["/Users/kieferslaton/workout/client/src/components/Register.js"],"names":["React","useState","Form","Button","axios","Register","handleSuccessfulLogin","username","setUsername","password","setPassword","password2","setPassword2","usernameError","setUsernameError","passwordError","setPasswordError","users","get","then","res","console","log","data","catch","err","handleSubmit","e","preventDefault","post","status","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA4B,iBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAA6B;AAC1C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,EAAxC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,EAAxC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,EAA1C;AACA,QAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACc,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,KAAD,CAAlD;AAEA,QAAMgB,KAAK,GAAGb,KAAK,CAACc,GAAN,CAAU,QAAV,EAAoBC,IAApB,CAAyBC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB,CAAhC,EAAuDC,KAAvD,CAA6DC,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAApE,CAAd;;AAEA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAxB,IAAAA,KAAK,CAACyB,IAAN,CAAW,cAAX,EAA2B;AACvBtB,MAAAA,QAAQ,EAAEA,QADa;AAEvBE,MAAAA,QAAQ,EAAEA;AAFa,KAA3B,EAGGU,IAHH,CAGQC,GAAG,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAjB,MAAAA,qBAAqB,CAACc,GAAG,CAACG,IAAL,CAArB;AACH,KAND,EAMGC,KANH,CAMSC,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAG,CAACK,MAAhB,CANhB;AAOH,GATD;;AAWA,sBACI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEJ,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,KAAK,EAAEnB,QAAjC;AAA2C,IAAA,QAAQ,EAAGoB,CAAD,IAAO;AACxDnB,MAAAA,WAAW,CAACmB,CAAC,CAACI,MAAF,CAASC,KAAV,CAAX;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACH,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAMI,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,SAAS,EAAG,GAAEJ,aAAa,GAAG,EAAH,GAAQ,QAAS,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BANJ,CADJ,eASI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,KAAK,EAAEJ,QAArC;AAA+C,IAAA,QAAQ,EAAGkB,CAAD,IAAOjB,WAAW,CAACiB,CAAC,CAACI,MAAF,CAASC,KAAV,CAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CATJ,eAaI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,KAAK,EAAErB,SAArC;AAAgD,IAAA,QAAQ,EAAGgB,CAAD,IAAOf,YAAY,CAACe,CAAC,CAACI,MAAF,CAASC,KAAV,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAbJ,eAiBI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBJ,CADJ;AAuBH,CA3CD;;AA6CA,eAAe3B,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Form, Button} from 'react-bootstrap'\nimport axios from 'axios'\n\nconst Register = ({handleSuccessfulLogin}) => {\n    const [username, setUsername] = useState()\n    const [password, setPassword] = useState()\n    const [password2, setPassword2] = useState()\n    const [usernameError, setUsernameError] = useState(false)\n    const [passwordError, setPasswordError] = useState(false)\n\n    const users = axios.get('/users').then(res => console.log(res.data)).catch(err => console.log(err))\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        axios.post('/users/login', {\n            username: username,\n            password: password\n        }).then(res => {\n            console.log(res.data)\n            handleSuccessfulLogin(res.data)\n        }).catch(err => console.log(err.status))\n    }\n\n    return(\n        <Form onSubmit={handleSubmit}>\n            <Form.Group controlId=\"formUsername\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control type=\"text\" value={username} onChange={(e) => {\n                    setUsername(e.target.value)\n                    console.log(users)\n                }} />\n                <Form.Text className={`${usernameError ? '' : 'd-none'} text-muted`}>Username already taken.</Form.Text>\n            </Form.Group>\n            <Form.Group controlId=\"formPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n            </Form.Group>\n            <Form.Group controlId=\"formPassword2\">\n                <Form.Label>Re-Enter Password</Form.Label>\n                <Form.Control type=\"password\" value={password2} onChange={(e) => setPassword2(e.target.value)} />\n            </Form.Group>\n            <Button type=\"submit\">\n                Register\n            </Button>\n        </Form>\n    )\n}\n\nexport default Register"]},"metadata":{},"sourceType":"module"}