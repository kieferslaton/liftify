{"ast":null,"code":"var _jsxFileName = \"/Users/kieferslaton/workout/client/src/components/Workout.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport axios from 'axios';\nimport moment from 'moment';\nimport DailyWorkout from './DailyWorkout';\nimport PlanForm from './PlanForm';\n\nconst Workout = ({\n  user\n}) => {\n  const [plan, setPlan] = useState();\n  const [dailyWorkout, setDailyWorkout] = useState();\n  const [nextWeek, setNextWeek] = useState();\n  useEffect(() => {\n    axios.get('/plans').then(res => {\n      let userPlan = res.data.filter(plan => plan.user === user.username);\n      console.log(userPlan);\n      if (userPlan.length > 0) setPlan(userPlan[0]);\n    });\n  }, []);\n\n  const passUpPlan = plan => {\n    setPlan(plan);\n  };\n\n  const updatePlan = workoutDay => {\n    let day = plan.days.find(day => day.name === workoutDay.name);\n    console.log(day);\n  };\n\n  const closeDailyWorkout = () => {\n    setDailyWorkout('');\n  };\n\n  const renderWeeks = () => {\n    let startDate = moment(plan.startDate).add(12, 'hours');\n    console.log(startDate.format(''));\n    console.log(moment(startDate).format('d'));\n    let rows = [];\n    rows.push( /*#__PURE__*/React.createElement(Row, {\n      key: \"1\",\n      className: \"my-3 justify-content-center text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 84\n      }\n    }, \"Mesocycle 1\")));\n\n    const daysRow = () => {\n      let row = [];\n\n      for (let i = 0; i < 7; i++) {\n        row.push( /*#__PURE__*/React.createElement(Col, {\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 26\n          }\n        }, moment(startDate).startOf('week').add(i, 'days').format('dd')));\n      }\n\n      return /*#__PURE__*/React.createElement(Row, {\n        key: \"daysRow1\",\n        className: \"my-3 justify-content-center text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }\n      }, row);\n    };\n\n    rows.push(daysRow());\n\n    for (let i = 0; i < 5; i++) {\n      let sundayOfWeek = moment(startDate).format('d') === 0 ? moment(startDate) : moment(startDate).startOf('week').add(i * 7, 'days');\n      let weekRow = [];\n\n      for (let j = 0; j < 7; j++) {\n        let workoutDay = moment(sundayOfWeek).add(j, 'days').format('YYYY-MM-DD');\n        plan.days.filter(day => day.date === workoutDay).length > 0 ? weekRow.push( /*#__PURE__*/React.createElement(Col, {\n          key: workoutDay,\n          className: \"loaded-day\",\n          onClick: () => {\n            setDailyWorkout(plan.days.filter(day => day.date === workoutDay)[0]);\n            setNextWeek(plan.days.filter(day => day.date === moment(workoutDay).add(7, 'days').format('YYYY-MM-DD'))[0]);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 30\n          }\n        }, moment(workoutDay).format('MM/DD'))) : weekRow.push( /*#__PURE__*/React.createElement(Col, {\n          key: workoutDay,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 30\n          }\n        }, moment(workoutDay).format('MM/DD')));\n      }\n\n      rows.push( /*#__PURE__*/React.createElement(Row, {\n        key: i,\n        className: \"my-3 justify-content-center text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 23\n        }\n      }, weekRow));\n      weekRow = [];\n    }\n\n    return rows;\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, plan ? /*#__PURE__*/React.createElement(React.Fragment, null, dailyWorkout ? /*#__PURE__*/React.createElement(DailyWorkout, {\n    dailyWorkout: dailyWorkout,\n    nextWeek: nextWeek,\n    closeDailyWorkout: closeDailyWorkout,\n    updatePlan: updatePlan,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }) : renderWeeks()) : /*#__PURE__*/React.createElement(PlanForm, {\n    user: user,\n    passUpPlan: passUpPlan,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Workout;","map":{"version":3,"sources":["/Users/kieferslaton/workout/client/src/components/Workout.js"],"names":["React","useState","useEffect","Container","Row","Col","axios","moment","DailyWorkout","PlanForm","Workout","user","plan","setPlan","dailyWorkout","setDailyWorkout","nextWeek","setNextWeek","get","then","res","userPlan","data","filter","username","console","log","length","passUpPlan","updatePlan","workoutDay","day","days","find","name","closeDailyWorkout","renderWeeks","startDate","add","format","rows","push","daysRow","row","i","startOf","sundayOfWeek","weekRow","j","date"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport axios from 'axios'\nimport moment from 'moment'\n\nimport DailyWorkout from './DailyWorkout'\nimport PlanForm from './PlanForm'\n\nconst Workout = ({user}) => {\n    const [plan, setPlan] = useState()\n    const [dailyWorkout, setDailyWorkout] = useState()\n    const [nextWeek, setNextWeek] = useState()\n\n    useEffect(() => {\n        axios.get('/plans').then(res => {\n            let userPlan = res.data.filter(plan => plan.user === user.username)\n            console.log(userPlan)\n            if(userPlan.length > 0) setPlan(userPlan[0])\n        })\n    }, [])\n\n    const passUpPlan = (plan) => {\n        setPlan(plan)\n    }\n\n    const updatePlan = (workoutDay) => {\n        let day = plan.days.find(day => day.name === workoutDay.name)\n        console.log(day)\n    }\n\n    const closeDailyWorkout = () => {\n        setDailyWorkout('')\n    }\n\n    const renderWeeks = () => {\n        let startDate = moment(plan.startDate).add(12, 'hours')\n        console.log(startDate.format(''))\n        console.log(moment(startDate).format('d'))\n        let rows =[]\n        rows.push(<Row key=\"1\" className=\"my-3 justify-content-center text-center\"><Col>Mesocycle 1</Col></Row>)\n        \n        const daysRow = () => {\n            let row = []\n            for (let i = 0; i < 7; i++){\n                row.push(<Col key={i}>{moment(startDate).startOf('week').add(i, 'days').format('dd')}</Col>)\n            }\n            return (<Row key=\"daysRow1\" className=\"my-3 justify-content-center text-center\">{row}</Row>)\n        }\n\n        rows.push(daysRow())\n\n        for (let i = 0; i < 5; i ++){\n            let sundayOfWeek = moment(startDate).format('d') === 0 ? moment(startDate) : moment(startDate).startOf('week').add(i*7, 'days')\n            let weekRow = []\n            for (let j = 0; j < 7; j++){\n                let workoutDay = moment(sundayOfWeek).add(j, 'days').format('YYYY-MM-DD')\n                plan.days.filter(day => day.date === workoutDay).length > 0 ? \n                weekRow.push(<Col key={workoutDay} className=\"loaded-day\" onClick = {() => {\n                    setDailyWorkout(plan.days.filter(day => day.date === workoutDay)[0])\n                    setNextWeek(plan.days.filter(day => day.date === moment(workoutDay).add(7, 'days').format('YYYY-MM-DD'))[0])\n                }}>{moment(workoutDay).format('MM/DD')}</Col>) : \n                weekRow.push(<Col key={workoutDay}>{moment(workoutDay).format('MM/DD')}</Col>)\n            }\n            rows.push(<Row key={i} className=\"my-3 justify-content-center text-center\">{weekRow}</Row>)\n            weekRow = []\n        }\n        return (rows)\n    }\n\n    return (\n        <>{plan?\n            <>\n            {dailyWorkout ?\n            <DailyWorkout dailyWorkout={dailyWorkout} nextWeek={nextWeek} closeDailyWorkout={closeDailyWorkout} updatePlan={updatePlan}/> : \n            renderWeeks()}\n            </>:\n            <PlanForm user={user} passUpPlan={passUpPlan} />}\n        </>\n    )\n}\n\nexport default Workout"]},"metadata":{},"sourceType":"module"}