{"ast":null,"code":"var _jsxFileName = \"/Users/kieferslaton/workout/client/src/components/Workout.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport axios from 'axios';\nimport moment from 'moment';\nimport DailyWorkout from './DailyWorkout';\nimport PlanForm from './PlanForm';\n\nconst Workout = ({\n  user\n}) => {\n  const [plan, setPlan] = useState();\n  const [workoutDay, setWorkoutDay] = useState();\n  useEffect(() => {\n    axios.get('/plans').then(res => {\n      let userPlan = res.data.find(plan => plan.user === user.username);\n      console.log(userPlan);\n      if (userPlan) setPlan(userPlan);\n    });\n  }, []);\n\n  const passUpPlan = plan => {\n    if (!plan) return;\n    setPlan(plan);\n  };\n\n  const refreshPlan = newPlan => {\n    if (!plan || !newPlan) return;\n    axios.post(`/plans/update/${plan._id}`, {\n      name: newPlan.name,\n      startDate: newPlan.startDate,\n      user: newPlan.user,\n      days: newPlan.days\n    }).then(res => {\n      console.log(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const closeDailyWorkout = () => {\n    setWorkoutDay('');\n  };\n\n  const renderWeeks = () => {\n    let startDate = moment(plan.startDate).add(12, 'hours');\n    let rows = [];\n    rows.push( /*#__PURE__*/React.createElement(Row, {\n      key: \"1\",\n      className: \"my-3 justify-content-center text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 84\n      }\n    }, \"Mesocycle 1\")));\n\n    const daysRow = () => {\n      let row = [];\n\n      for (let i = 0; i < 7; i++) {\n        row.push( /*#__PURE__*/React.createElement(Col, {\n          key: `Day Row ${i}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 26\n          }\n        }, moment(startDate).startOf('week').add(i, 'days').format('dd')));\n      }\n\n      return /*#__PURE__*/React.createElement(Row, {\n        key: \"daysRow1\",\n        className: \"my-3 justify-content-center text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }, row);\n    };\n\n    rows.push(daysRow());\n\n    for (let i = 0; i < 5; i++) {\n      let sundayOfWeek = moment(startDate).format('d') === 0 ? moment(startDate) : moment(startDate).startOf('week').add(i * 7, 'days');\n      let weekRow = [];\n\n      for (let j = 0; j < 7; j++) {\n        let workoutDay = moment(sundayOfWeek).add(j, 'days').format('YYYY-MM-DD');\n        plan.days.filter(day => day.date === workoutDay).length > 0 ? weekRow.push( /*#__PURE__*/React.createElement(Col, {\n          key: workoutDay,\n          className: \"loaded-day m-0 p-0\",\n          onClick: () => {\n            setWorkoutDay(workoutDay);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 30\n          }\n        }, moment(workoutDay).format('M/D'))) : weekRow.push( /*#__PURE__*/React.createElement(Col, {\n          className: \"mx-0 px-0\",\n          key: workoutDay,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 30\n          }\n        }, moment(workoutDay).format('M/D')));\n      }\n\n      rows.push( /*#__PURE__*/React.createElement(Row, {\n        key: `Row ${i}`,\n        className: \"my-3 justify-content-center text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 23\n        }\n      }, weekRow));\n      weekRow = [];\n    }\n\n    return rows;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      maxWidth: 800,\n      width: \"100%\",\n      margin: \"0 auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, plan ? /*#__PURE__*/React.createElement(React.Fragment, null, workoutDay ? /*#__PURE__*/React.createElement(Container, {\n    className: \"m-0 p-0\",\n    style: {\n      maxWidth: \"95%\",\n      margin: \"0 auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DailyWorkout, {\n    workoutDay: workoutDay,\n    closeDailyWorkout: closeDailyWorkout,\n    plan: plan,\n    refreshPlan: refreshPlan,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, renderWeeks())) : /*#__PURE__*/React.createElement(PlanForm, {\n    user: user,\n    passUpPlan: passUpPlan,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Workout;","map":{"version":3,"sources":["/Users/kieferslaton/workout/client/src/components/Workout.js"],"names":["React","useState","useEffect","Container","Row","Col","axios","moment","DailyWorkout","PlanForm","Workout","user","plan","setPlan","workoutDay","setWorkoutDay","get","then","res","userPlan","data","find","username","console","log","passUpPlan","refreshPlan","newPlan","post","_id","name","startDate","days","catch","err","closeDailyWorkout","renderWeeks","add","rows","push","daysRow","row","i","startOf","format","sundayOfWeek","weekRow","j","filter","day","date","length","maxWidth","width","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport axios from 'axios'\nimport moment from 'moment'\n\nimport DailyWorkout from './DailyWorkout'\nimport PlanForm from './PlanForm'\n\nconst Workout = ({user}) => {\n    const [plan, setPlan] = useState()\n    const [workoutDay, setWorkoutDay] = useState()\n\n    useEffect(() => {\n        axios.get('/plans').then(res => {\n            let userPlan = res.data.find(plan => plan.user === user.username)\n            console.log(userPlan)\n            if(userPlan) setPlan(userPlan)\n        })\n    }, [])\n\n    const passUpPlan = (plan) => {\n        if(!plan) return\n        setPlan(plan)\n    }\n\n    const refreshPlan = (newPlan) => {\n        if(!plan || !newPlan) return\n        axios.post(`/plans/update/${plan._id}`, {\n            name: newPlan.name, \n            startDate: newPlan.startDate, \n            user: newPlan.user, \n            days: newPlan.days\n        }).then(res => {\n            console.log(res.data)\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n\n    const closeDailyWorkout = () => {\n        setWorkoutDay('')\n    }\n\n    const renderWeeks = () => {\n        let startDate = moment(plan.startDate).add(12, 'hours')\n        let rows =[]\n        rows.push(<Row key=\"1\" className=\"my-3 justify-content-center text-center\"><Col>Mesocycle 1</Col></Row>)\n        \n        const daysRow = () => {\n            let row = []\n            for (let i = 0; i < 7; i++){\n                row.push(<Col key={`Day Row ${i}`}>{moment(startDate).startOf('week').add(i, 'days').format('dd')}</Col>)\n            }\n            return (<Row key=\"daysRow1\" className=\"my-3 justify-content-center text-center\">{row}</Row>)\n        }\n\n        rows.push(daysRow())\n\n        for (let i = 0; i < 5; i ++){\n            let sundayOfWeek = moment(startDate).format('d') === 0 ? moment(startDate) : moment(startDate).startOf('week').add(i*7, 'days')\n            let weekRow = []\n            for (let j = 0; j < 7; j++){\n                let workoutDay = moment(sundayOfWeek).add(j, 'days').format('YYYY-MM-DD')\n                plan.days.filter(day => day.date === workoutDay).length > 0 ? \n                weekRow.push(<Col key={workoutDay} className=\"loaded-day m-0 p-0\" onClick = {() => {\n                    setWorkoutDay(workoutDay)\n                }}>{moment(workoutDay).format('M/D')}</Col>) : \n                weekRow.push(<Col className=\"mx-0 px-0\" key={workoutDay}>{moment(workoutDay).format('M/D')}</Col>)\n            }\n            rows.push(<Row key={`Row ${i}`} className=\"my-3 justify-content-center text-center\">{weekRow}</Row>)\n            weekRow = []\n        }\n        return (rows)\n    }\n\n    return (\n        <div style={{maxWidth: 800, width: \"100%\", margin: \"0 auto\"}}>{plan?\n            <>\n            {workoutDay ?\n            <Container className=\"m-0 p-0\" style={{maxWidth: \"95%\", margin: \"0 auto\"}}>\n            <DailyWorkout workoutDay={workoutDay} closeDailyWorkout={closeDailyWorkout} plan={plan} refreshPlan={refreshPlan} />\n            </Container> : \n            <Container>\n            {renderWeeks()}\n            </Container>}\n            </>:\n            <PlanForm user={user} passUpPlan={passUpPlan} />}\n        </div>\n    )\n}\n\nexport default Workout"]},"metadata":{},"sourceType":"module"}