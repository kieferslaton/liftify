{"ast":null,"code":"var _jsxFileName = \"/Users/kieferslaton/workout/client/src/components/PlanForm.js\";\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport moment from 'moment';\n\nconst PlanForm = ({\n  user\n}) => {\n  const [benchVal, setBenchVal] = useState('');\n  const [squatVal, setSquatVal] = useState('');\n  const [date, setDate] = useState('');\n  const [days, setDays] = useState([]);\n\n  const handleCheckToggle = val => {\n    if (!days.includes(val)) {\n      setDays([...days, val]);\n    } else {\n      setDays(days.filter(day => day !== val));\n    }\n\n    console.log(days);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(benchVal, squatVal, date, days);\n    let plan = {};\n    plan.startDate = date;\n    plan.user = user.username;\n    plan.days = []; //First Mesocycle\n\n    let firstCycleWeeks = 5;\n\n    for (let i = 0; i < firstCycleWeeks; i++) {\n      const startOfWeek = moment(date).add(i * 7, 'days');\n      days.forEach((day, index) => {\n        let name;\n        let exercises = [];\n        const dayDate = moment(startOfWeek).add(day, 'days');\n\n        if (index === 0) {\n          name = \"Chest \" + i;\n          exercises = [{\n            name: \"Bench Press\",\n            reps: 5,\n            sets: 5,\n            weight: benchVal,\n            complete: false\n          }, {\n            name: \"Shoulder Press\",\n            reps: 5,\n            sets: 5,\n            weight: benchVal * 0.75,\n            complete: false\n          }];\n        } else if (index === 1) {\n          name = \"Back \" + i;\n          exercises = [{\n            name: \"Bent Over Row\",\n            reps: 5,\n            sets: 5,\n            weight: benchVal,\n            complete: false\n          }, {\n            name: \"Lat Pulldown\",\n            reps: 5,\n            sets: 5,\n            weight: benchVal * 0.75,\n            complete: false\n          }];\n        } else if (index === 2) {\n          name = \"Legs \" + i;\n          exercises = [{\n            name: \"Squat\",\n            reps: 5,\n            sets: 5,\n            weight: squatVal,\n            complete: false\n          }, {\n            name: \"Deadlift\",\n            reps: 5,\n            sets: 5,\n            weight: squatVal * 1.5,\n            complete: false\n          }];\n        } else {\n          name = \"Arms \" + i;\n          exercises = [{\n            name: \"Barbell Curl\",\n            reps: 5,\n            sets: 5,\n            weight: benchVal * 0.5,\n            complete: false\n          }, {\n            name: \"Ring Dip\",\n            reps: 5,\n            sets: 5,\n            weight: benchVal,\n            complete: false\n          }];\n        }\n\n        plan.days.push({\n          name: name,\n          date: dayDate,\n          exercises: exercises\n        });\n      });\n    }\n\n    console.log(plan);\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, \"Bench Press (10RM)\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: benchVal,\n    onChange: e => setBenchVal(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, \"Squat (10RM)\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: squatVal,\n    onChange: e => setSquatVal(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, \"Plan Start Date\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"date\",\n    value: date,\n    onChange: e => setDate(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, \"Days of Week (Select 4)\"), /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"checkbox\",\n    label: \"Sunday\",\n    value: \"0\",\n    onClick: e => handleCheckToggle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"checkbox\",\n    label: \"Monday\",\n    value: \"1\",\n    onClick: e => handleCheckToggle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"checkbox\",\n    label: \"Tuesday\",\n    value: \"2\",\n    onClick: e => handleCheckToggle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"checkbox\",\n    label: \"Wednesday\",\n    value: \"3\",\n    onClick: e => handleCheckToggle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"checkbox\",\n    label: \"Thursday\",\n    value: \"4\",\n    onClick: e => handleCheckToggle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"checkbox\",\n    label: \"Friday\",\n    value: \"5\",\n    onClick: e => handleCheckToggle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"checkbox\",\n    label: \"Saturday\",\n    value: \"6\",\n    onClick: e => handleCheckToggle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, \"Make My Plan!\"));\n};\n\nexport default PlanForm;","map":{"version":3,"sources":["/Users/kieferslaton/workout/client/src/components/PlanForm.js"],"names":["React","useState","Form","Button","moment","PlanForm","user","benchVal","setBenchVal","squatVal","setSquatVal","date","setDate","days","setDays","handleCheckToggle","val","includes","filter","day","console","log","handleSubmit","e","preventDefault","plan","startDate","username","firstCycleWeeks","i","startOfWeek","add","forEach","index","name","exercises","dayDate","reps","sets","weight","complete","push","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport moment from 'moment'\n\nconst PlanForm = ( {user }) => {\n    const [benchVal, setBenchVal] = useState('')\n    const [squatVal, setSquatVal] = useState('')\n    const [date, setDate] = useState('')\n    const [days, setDays] = useState([])\n\n    const handleCheckToggle = (val) => {\n        if (!days.includes(val)){\n            setDays([...days, val])\n        } else {\n            setDays(days.filter(day => day !== val))\n        }\n\n        console.log(days)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        console.log(benchVal, squatVal, date, days)\n        let plan = {}\n        plan.startDate = date\n        plan.user = user.username\n        plan.days = []\n\n        //First Mesocycle\n        let firstCycleWeeks = 5\n        for (let i = 0; i < firstCycleWeeks; i++){\n            const startOfWeek = moment(date).add(i*7, 'days')\n            days.forEach((day, index) => {\n                let name\n                let exercises = []\n                const dayDate = moment(startOfWeek).add(day, 'days')\n                if(index === 0){\n                    name = \"Chest \"+i\n                    exercises = [\n                        {\n                            name: \"Bench Press\",\n                            reps: 5,\n                            sets: 5, \n                            weight: benchVal,\n                            complete: false\n                        },\n                        {\n                            name: \"Shoulder Press\",\n                            reps: 5,\n                            sets: 5, \n                            weight: benchVal*0.75,\n                            complete: false\n                        }\n                    ]\n                } else if (index === 1){\n                    name = \"Back \"+i\n                    exercises = [\n                        {\n                            name: \"Bent Over Row\",\n                            reps: 5,\n                            sets: 5, \n                            weight: benchVal,\n                            complete: false\n                        },\n                        {\n                            name: \"Lat Pulldown\",\n                            reps: 5,\n                            sets: 5, \n                            weight: benchVal*0.75,\n                            complete: false\n                        }\n                    ]\n                } else if(index === 2){\n                    name = \"Legs \"+i\n                    exercises = [\n                        {\n                            name: \"Squat\",\n                            reps: 5,\n                            sets: 5, \n                            weight: squatVal,\n                            complete: false\n                        },\n                        {\n                            name: \"Deadlift\",\n                            reps: 5,\n                            sets: 5, \n                            weight: squatVal*1.5,\n                            complete: false\n                        }\n                    ]\n                } else {\n                    name = \"Arms \"+i\n                    exercises = [\n                        {\n                            name: \"Barbell Curl\",\n                            reps: 5,\n                            sets: 5, \n                            weight: benchVal*0.5,\n                            complete: false\n                        },\n                        {\n                            name: \"Ring Dip\",\n                            reps: 5,\n                            sets: 5, \n                            weight: benchVal,\n                            complete: false\n                        }\n                    ]\n                }\n\n                plan.days.push({\n                    name: name,\n                    date: dayDate,\n                    exercises: exercises\n                })\n            })\n        }\n\n        console.log(plan)\n    }\n\n    return(\n        <Form onSubmit={handleSubmit}> \n            <Form.Group>\n                <Form.Label>Bench Press (10RM)</Form.Label>\n                <Form.Control type=\"text\" value={benchVal} onChange={(e) => setBenchVal(e.target.value)} />\n            </Form.Group>\n            <Form.Group>\n                <Form.Label>Squat (10RM)</Form.Label>\n                <Form.Control type=\"text\" value={squatVal} onChange={(e) => setSquatVal(e.target.value)} />\n            </Form.Group>\n            <Form.Group>\n                <Form.Label>Plan Start Date</Form.Label>\n                <Form.Control type=\"date\" value={date} onChange={(e) => setDate(e.target.value)} />\n            </Form.Group>\n            <Form.Group>\n                <Form.Label>Days of Week (Select 4)</Form.Label>\n                <Form.Check type=\"checkbox\" label=\"Sunday\" value='0' onClick={(e) => handleCheckToggle(e.target.value)} />\n                <Form.Check type=\"checkbox\" label=\"Monday\" value='1' onClick={(e) => handleCheckToggle(e.target.value)} />\n                <Form.Check type=\"checkbox\" label=\"Tuesday\" value='2' onClick={(e) => handleCheckToggle(e.target.value)} />\n                <Form.Check type=\"checkbox\" label=\"Wednesday\" value='3' onClick={(e) => handleCheckToggle(e.target.value)} />\n                <Form.Check type=\"checkbox\" label=\"Thursday\" value='4' onClick={(e) => handleCheckToggle(e.target.value)} />\n                <Form.Check type=\"checkbox\" label=\"Friday\" value='5' onClick={(e) => handleCheckToggle(e.target.value)} />\n                <Form.Check type=\"checkbox\" label=\"Saturday\" value='6' onClick={(e) => handleCheckToggle(e.target.value)} />\n            </Form.Group>\n            <Button type=\"submit\">Make My Plan!</Button>\n        </Form>\n    )\n}\n\nexport default PlanForm"]},"metadata":{},"sourceType":"module"}